group 'com.incarcloud'
version '1.1.0'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    if (project.hasProperty("maven")) {
        if (maven.equals("maven.aliyun.com"))
            maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        else
            mavenCentral()
    } else {
        mavenCentral()
    }
}


dependencies {
    compile("org.slf4j:slf4j-api:1.7.+")
    compile("org.apache.logging.log4j:log4j-slf4j-impl:2.8.+")
    compile("org.apache.logging.log4j:log4j-core:2.8.+")

    compile("com.aliyun.mns:aliyun-sdk-mns:1.1.+")

    compile("org.quartz-scheduler:quartz:2.3.+")

    compile("org.springframework.boot:spring-boot-starter:1.5.+") {
        exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }

    testCompile("junit:junit:4.+")
    testCompile("org.springframework.boot:spring-boot-starter-test:1.5.+")
}

compileJava{
    options.encoding = "utf-8"
    options.compilerArgs << "-Xlint:unchecked"
}

compileTestJava{
    options.encoding = "utf-8"
    options.compilerArgs << "-Xlint:unchecked"
}

test{
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}

defaultTasks "build"


buildscript {
    repositories {
        if (project.hasProperty("maven")) {
            if (maven.equals("maven.aliyun.com"))
                maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
            else
                mavenCentral()
        } else {
            mavenCentral()
        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.+"
    }
}